name: Container Deployment
on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    timeout-minutes: 10
    runs-on: ubuntu-latest

    container:        # everything runs in the container specified here
      image: node:16  # and you wil have no access to the tools installed on 'ubuntu-latest'
                      # only tools you have are those that has been installed in the node container :/ 
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb+srv
      MONGODB_CLUSTER_ADDRESS: mongodb-service  # for real database: ${{ secrets.MONGODB_CLUSTER_ADDRESS }}
      MONGODB_USERNAME: root                    # for real database: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: example                 # for real database: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    
    services:
      mongodb-service:  # these settings come from the 'mongo' docker image - all services can be configure via the help of docker hub
        image: mongo
        env: 
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example

    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
